apply plugin: 'maven-publish'

def LIB_GROUP_ID = 'com.shark.android'
def LIB_ARTIFACT_ID = 'tools'
def LIB_VERSION = project.properties['TAG_VERSION'] ?: getLastTag()

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

//获得最后的tag
def getLastTag() {
    String tagListStr = "git tag --sort=v:refname".execute().text
    List<String> tagList = tagListStr.split("\n")
    return tagList.get(tagList.size() - 1)
}


//publishToolsPublicationToGitToolsRepository.dependsOn(gitVersionPublishTools)
publishing {
    repositories {
        maven {
            name = "GitTools"
            url = uri("https://maven.pkg.github.com/yudaosharkteam/sharkmvvm")
            credentials {
                username = System.getenv('GITHUB_USER') ?: project.properties['GITHUB_USER']
                password = System.getenv('GITHUB_PERSONAL_ACCESS_TOKEN') ?: project.properties['GITHUB_PERSONAL_ACCESS_TOKEN']
            }
        }
//        maven { url "https://jitpack.io" }

        maven {
            name = 'CustomMavenRepo'
            url = "file://${buildDir}/repo"
        }
    }
    publications {
        tools(MavenPublication) {
            groupId LIB_GROUP_ID
            artifactId LIB_ARTIFACT_ID
            version LIB_VERSION
            artifact("$buildDir/outputs/aar/tools-debug.aar")
            artifact(sourceJar)

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.api.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}


//task changeVersion(dependsOn: assemble) {
//    group 'gitPublish'
//    description '修改版本号'
//    doLast {
//        if (LIB_VERSION == null) {
//            LIB_VERSION = getLastTag()
//            println "Publish Version is:$LIB_VERSION"
//        }
//    }
//}
//
//publishToolsPublicationToGitToolsRepository.dependsOn(changeVersion)

//发布Tools
task gitVersionPublishTools(dependsOn: publishToolsPublicationToGitToolsRepository) {
    group 'gitPublish'
    description '发布Tools正式版本'
    doLast {
        println "Publish Success!! :$LIB_VERSION"
    }
}